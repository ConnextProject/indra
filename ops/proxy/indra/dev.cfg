global
  log stdout local0
  maxconn 50000
  tune.ssl.default-dh-param 2048

defaults
  log global
  mode http
  option dontlognull
  option http-server-close
  option httpclose
  option httplog
  option forwardfor
  option redispatch
  timeout client  300000  # 5 minutes
  timeout connect 3000    # 3 seconds
  timeout server  300000  # 5 minutes

frontend public_http
  acl api_path path_beg /api
  acl ethprovider_path path_beg /api/ethprovider
  acl messaging_path path_beg /api/messaging
  acl url_devserver path_beg /sockjs-node
  acl url_static path_beg /static
  acl url_static path_end .css .gif .html .jpg .js .png
  bind *:80
  default_backend webserver
  use_backend ethprovider if ethprovider_path
  use_backend nats_ws if messaging_path
  use_backend node if api_path
  use_backend webserver if url_static url_devserver

frontend public_nats
  bind *:4221
  default_backend nats_tcp
  mode tcp
  option tcplog

backend ethprovider
  http-request del-header Host
  http-request add-header Host "$ETH_PROVIDER_HOST"
  http-request replace-path /api/ethprovider "$ETH_PROVIDER_PATH"
  server ethprovider "$ETH_PROVIDER_HOST" "$ETH_PROVIDER_PROTOCOL" ca-file ca-certs.pem
  rspadd Access-Control-Allow-Origin:\ *
  rspadd Access-Control-Allow-Headers:\ content-type

backend nats_ws
  server nats "$MESSAGING_WS_URL"
  rspadd Access-Control-Allow-Origin:\ *
  rspadd Access-Control-Allow-Headers:\ content-type

backend nats_tcp
  mode tcp
  server nats "$MESSAGING_TCP_URL"

backend node
  http-request replace-path /api/(.*) /\1
  server node "$NODE_URL"
  rspadd Access-Control-Allow-Origin:\ *
  rspadd Access-Control-Allow-Headers:\ content-type

backend webserver
  server webserver "$WEBSERVER_URL"
  rspadd Access-Control-Allow-Origin:\ *
  rspadd Access-Control-Allow-Headers:\ content-type
