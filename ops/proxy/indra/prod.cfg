global
  daemon
  log stdout local0
  maxconn 2048

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL).
  ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
  ssl-default-bind-options no-sslv3

defaults
  log global
  mode http
  option dontlognull
  option http-server-close
  option httpclose
  option httplog
  option redispatch
  timeout client  300000  # 5 minutes
  timeout connect 3000    # 3 seconds
  timeout server  300000  # 5 minutes

frontend public_nats
  mode tcp
  option tcplog
  bind *:4221 ssl crt "/etc/haproxy/certs/$DOMAINNAME.pem"
  default_backend nats_tcp

backend nats_tcp
  mode tcp
  option httpchk HEAD / HTTP/1.1
  server nats "$MESSAGING_TCP_URL"

frontend public_http
  option forwardfor
  bind *:80
  http-request add-header X-Forwarded-Proto: http
  redirect scheme https if !{ ssl_fc }
  default_backend letsencrypt_backend

backend letsencrypt_backend
  option forwardfor
  server letsencrypt "127.0.0.1:$CERTBOT_PORT"

frontend public_https
  option forwardfor
  bind *:443 ssl crt "/etc/haproxy/certs/$DOMAINNAME.pem"

  http-request add-header X-Forwarded-Proto: https
  acl letsencrypt-acl path_beg /.well-known/acme-challenge/
  use_backend letsencrypt_backend if letsencrypt-acl

  acl url_devserver path_beg /sockjs-node
  acl url_static path_beg /static /images /img /css
  acl url_static path_end .css .gif .html .jpg .js .png
  use_backend webserver if url_static url_devserver

  acl ethprovider_path path_beg /api/ethprovider
  use_backend ethprovider if ethprovider_path

  acl messaging_path path_beg /api/messaging
  use_backend nats_ws if messaging_path

  acl api_path path_beg /api
  use_backend node if api_path

  default_backend webserver

backend ethprovider
  option forwardfor
  http-request replace-path /api/ethprovider /
  option httpchk HEAD / HTTP/1.1
  server webserver "$ETH_RPC_URL"

backend nats_ws
  option forwardfor
  option httpchk HEAD / HTTP/1.1
  server nats "$MESSAGING_WS_URL"

backend node
  option forwardfor
  http-request replace-path /api/(.*) /\1
  option httpchk HEAD / HTTP/1.1
  server node "$NODE_URL"

backend webserver
  option forwardfor
  option httpchk HEAD / HTTP/1.1
  server webserver "$WEBSERVER_URL"
