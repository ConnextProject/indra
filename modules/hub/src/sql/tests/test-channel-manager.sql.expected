select hex_normalize('foo', '0x1234ABC');
 hex_normalize 
---------------
 0x1234abc
(1 row)

select hex_normalize('foo', '1234abC');
 hex_normalize 
---------------
 0x1234abc
(1 row)

select hex_normalize('foo', '1234abC', true);
 hex_normalize 
---------------
 0x1234abc
(1 row)

select hex_normalize('foo', 'stuff');
ERROR:  foo is not a valid hex string: stuff
CONTEXT:  PL/pgSQL function hex_normalize(text,text,boolean) line 12 at RAISE
select hex_normalize('foo', null);
 hex_normalize 
---------------
 
(1 row)

select hex_normalize('foo', null, true);
 hex_normalize 
---------------
 
(1 row)

select json_not_null('{"foo": 42}', 'foo');
 json_not_null 
---------------
 42
(1 row)

select json_not_null('{"foo": 42}', 'bar');
ERROR:  bar must not be null
CONTEXT:  PL/pgSQL function json_not_null(jsonb,text,text) line 6 at RAISE
create function mk_addr(prefix text) returns csw_eth_address
language sql as $$ select rpad(prefix, 42, '0')::csw_eth_address $$;
CREATE FUNCTION
create function mk_hash(prefix text) returns csw_sha3_hash
language sql as $$ select rpad(prefix, 66, '0')::csw_sha3_hash $$;
CREATE FUNCTION
create function mk_sig(prefix text) returns eth_signature
language sql as $$ select rpad(prefix, 132, '0')::eth_signature $$;
CREATE FUNCTION
create function show_row(r json)
returns jsonb
language plpgsql as $pgsql$
declare
    res text;
begin
    res := r::text;
    res := regexp_replace(res, '"2\d{3}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+[^"]*"', '"<date>"', 'g');
    return res;
end;
$pgsql$;
CREATE FUNCTION
--
-- Chainsaw events
--
-- Insert a DidHubContractWithdraw chainsaw event
select chainsaw_insert_event(
    mk_addr('0x1ABC'), mk_addr('0x2ABC'),
    69, mk_hash('0x69ABC'), mk_hash('0x6969ABC'), 1, 1,
    mk_addr('0x3ABC'),
    extract(epoch from now()) * 1000,
    'DidHubContractWithdraw',
    '{}'::jsonb
);
                      chainsaw_insert_event                       
------------------------------------------------------------------
 {"duplicate": false, "channel_id": null, "chainsaw_event_id": 1}
(1 row)

-- Insert a duplicate chainsaw event
select chainsaw_insert_event(
    mk_addr('0x1ABC'), mk_addr('0x2ABC'),
    69, mk_hash('0x69ABC'), mk_hash('0x6969ABC'), 1, 1,
    mk_addr('0x3ABC'),
    extract(epoch from now()) * 1000,
    'DidHubContractWithdraw',
    '{}'::jsonb
);
                      chainsaw_insert_event                      
-----------------------------------------------------------------
 {"duplicate": true, "channel_id": null, "chainsaw_event_id": 1}
(1 row)

-- Insert an initial chainsaw event
select chainsaw_insert_event(
    mk_addr('0x1ABC'), mk_addr('0x2ABC'),
    69, mk_hash('0x69ABC'), mk_hash('0x6969ABC'), 2, 1,
    mk_addr('0x3ABC'),
    extract(epoch from now()) * 1000,
    'DidUpdateChannel',
    jsonb_build_object('user', mk_addr('0x3ABC'))
);
                     chainsaw_insert_event                     
---------------------------------------------------------------
 {"duplicate": false, "channel_id": 1, "chainsaw_event_id": 3}
(1 row)

-- Insert a subsequent chainsaw event
select chainsaw_insert_event(
    mk_addr('0x1ABC'), mk_addr('0x2ABC'),
    69, mk_hash('0x69ABC'), mk_hash('0x6969ABC'), 3, 1,
    mk_addr('0x3ABC'),
    extract(epoch from now()) * 1000,
    'DidUpdateChannel',
    jsonb_build_object('user', mk_addr('0x3ABC'))
);
                     chainsaw_insert_event                     
---------------------------------------------------------------
 {"duplicate": false, "channel_id": 1, "chainsaw_event_id": 4}
(1 row)

--
-- channel state updates
--
-- Inserting a state
select show_row(row_to_json(cm_channel_insert_or_update_state(
    mk_addr('0x1abc'), mk_addr('0x2abc'), mk_addr('0x3abc'),
    'Payment', '{}',
    mk_addr('0x3ABC'),
    null, null,
    jsonb_build_object(
        'recipient', mk_addr('0x3ABC'),
        'balanceWeiHub', '6',
        'balanceWeiUser', '9',
        'balanceTokenHub', '69',
        'balanceTokenUser', '96',
        'txCountGlobal', '1',
        'txCountChain', '1',
        'threadRoot', mk_hash('0x0'),
        'threadCount', '0',
        'sigHub', mk_sig('0x123')
    )
)));
show_row                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 

 {"id": 1, "args": {}, "user": "0x3abc000000000000000000000000000000000000", "reason": "Payment", "invalid": null, "sig_hub": "0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "timeout": null, "contract": "0x2ABC000000000000000000000000000000000000", "sig_user": null, "recipient": "0x3abc000000000000000000000000000000000000", "channel_id": 1, "created_on": "<date>", "originator": "0x3ABC000000000000000000000000000000000000", "thread_root": "0x0000000000000000000000000000000000000000000000000000000000000000", "thread_count": 0, "hub_signed_on": "<date>", "tx_count_chain": 1, "user_signed_on": null, "balance_wei_hub": 6, "tx_count_global": 1, "balance_wei_user": 9, "balance_token_hub": 69, "chainsaw_event_id": null, "balance_token_user": 96, "onchain_tx_logical_id": null, "pending_deposit_wei_hub": null, "pending_deposit_wei_user": null, "pending_deposit_token_hub": null, "pending_deposit_token_user": null, "pending_withdrawal_wei_hub": null, "pending_withdrawal_wei_user": null, "chainsaw_resolution_event_id": null, "pending_withdrawal_token_hub": null, "pending_withdrawal_token_user": null}
(1 row)

select recipient, sig_hub, sig_user, latest_update_id
from cm_channels
where "user" = mk_addr('0x3abc');
                 recipient                  |                                                               sig_hub                                                                | sig_user | latest_update_id 
--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+----------+------------------
 0x3abc000000000000000000000000000000000000 | 0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |          |                1
(1 row)

-- Inserting a duplicate state
select show_row(row_to_json(cm_channel_insert_or_update_state(
    mk_addr('0x1abc'), mk_addr('0x2abc'), mk_addr('0x3abc'),
    'Payment', '{}',
    mk_addr('0x3ABC'),
    null, null,
    jsonb_build_object(
        'recipient', mk_addr('0x3ABC'),
        'balanceWeiHub', '6',
        'balanceWeiUser', '9',
        'balanceTokenHub', '69',
        'balanceTokenUser', '96',
        'txCountGlobal', '1',
        'txCountChain', '1',
        'threadRoot', mk_hash('0x0'),
        'threadCount', '0',
        'sigHub', mk_sig('0x123'),
        'sigUser', mk_sig('0x456')
    )
)));
show_row

 {"id": 1, "args": {}, "user": "0x3abc000000000000000000000000000000000000", "reason": "Payment", "invalid": null, "sig_hub": "0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "timeout": null, "contract": "0x2ABC000000000000000000000000000000000000", "sig_user": "0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "recipient": "0x3abc000000000000000000000000000000000000", "channel_id": 1, "created_on": "<date>", "originator": "0x3ABC000000000000000000000000000000000000", "thread_root": "0x0000000000000000000000000000000000000000000000000000000000000000", "thread_count": 0, "hub_signed_on": "<date>", "tx_count_chain": 1, "user_signed_on": "<date>", "balance_wei_hub": 6, "tx_count_global": 1, "balance_wei_user": 9, "balance_token_hub": 69, "chainsaw_event_id": null, "balance_token_user": 96, "onchain_tx_logical_id": null, "pending_deposit_wei_hub": null, "pending_deposit_wei_user": null, "pending_deposit_token_hub": null, "pending_deposit_token_user": null, "pending_withdrawal_wei_hub": null, "pending_withdrawal_wei_user": null, "chainsaw_resolution_event_id": null, "pending_withdrawal_token_hub": null, "pending_withdrawal_token_user": null}
(1 row)

select recipient, sig_hub, sig_user, latest_update_id
from cm_channels
where "user" = mk_addr('0x3abc');
                 recipient                  |                                                               sig_hub                                                                |                                                               sig_user                                                               | latest_update_id 
--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------
 0x3abc000000000000000000000000000000000000 | 0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 | 0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |                1
(1 row)

-- Inserting a duplicate state that updates the user's sig
select show_row(row_to_json(cm_channel_insert_or_update_state(
    mk_addr('0x1abc'), mk_addr('0x2abc'), mk_addr('0x3abc'),
    'Payment', '{}',
    mk_addr('0x3ABC'),
    null, null,
    jsonb_build_object(
        'recipient', mk_addr('0x3ABC'),
        'balanceWeiHub', '6',
        'balanceWeiUser', '9',
        'balanceTokenHub', '69',
        'balanceTokenUser', '96',
        'txCountGlobal', '1',
        'txCountChain', '1',
        'threadRoot', mk_hash('0x0'),
        'threadCount', '0',
        'sigHub', mk_sig('0x123'),
        'sigUser', mk_sig('0x999')
    )
)));
ERROR:  update attempts to change user signature on update 1 from 0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 to 0x9990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000!
CONTEXT:  PL/pgSQL function cm_channel_insert_or_update_state(csw_eth_address,csw_eth_address,csw_eth_address,cm_channel_update_reason,jsonb,csw_eth_address,bigint,bigint,jsonb) line 61 at RAISE
select recipient, sig_hub, sig_user, latest_update_id
from cm_channels
where "user" = mk_addr('0x3abc');
                 recipient                  |                                                               sig_hub                                                                |                                                               sig_user                                                               | latest_update_id 
--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------
 0x3abc000000000000000000000000000000000000 | 0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 | 0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |                1
(1 row)

-- Inserting a new state update
select show_row(row_to_json(cm_channel_insert_or_update_state(
    mk_addr('0x1abc'), mk_addr('0x2abc'), mk_addr('0x3abc'),
    'Payment', '{}',
    mk_addr('0x3ABC'),
    null, null,
    jsonb_build_object(
        'recipient', mk_addr('0x3ABC'),
        'balanceWeiHub', '5',
        'balanceWeiUser', '10',
        'balanceTokenHub', '68',
        'balanceTokenUser', '97',
        'txCountGlobal', '2',
        'txCountChain', '1',
        'threadRoot', mk_hash('0x0'),
        'threadCount', '0',
        'sigHub', mk_sig('0x123'),
        'sigUser', mk_sig('0x456')
    )
)));
show_row
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"id": 2, "args": {}, "user": "0x3abc000000000000000000000000000000000000", "reason": "Payment", "invalid": null, "sig_hub": "0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "timeout": null, "contract": "0x2ABC000000000000000000000000000000000000", "sig_user": "0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "recipient": "0x3abc000000000000000000000000000000000000", "channel_id": 1, "created_on": "<date>", "originator": "0x3ABC000000000000000000000000000000000000", "thread_root": "0x0000000000000000000000000000000000000000000000000000000000000000", "thread_count": 0, "hub_signed_on": "<date>", "tx_count_chain": 1, "user_signed_on": "<date>", "balance_wei_hub": 5, "tx_count_global": 2, "balance_wei_user": 10, "balance_token_hub": 68, "chainsaw_event_id": null, "balance_token_user": 97, "onchain_tx_logical_id": null, "pending_deposit_wei_hub": null, "pending_deposit_wei_user": null, "pending_deposit_token_hub": null, "pending_deposit_token_user": null, "pending_withdrawal_wei_hub": null, "pending_withdrawal_wei_user": null, "chainsaw_resolution_event_id": null, "pending_withdrawal_token_hub": null, "pending_withdrawal_token_user": null}
(1 row)

select recipient, sig_hub, sig_user, latest_update_id
from cm_channels
where "user" = mk_addr('0x3abc');
                 recipient                  |                                                               sig_hub                                                                |                                                               sig_user                                                               | latest_update_id 
--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------
 0x3abc000000000000000000000000000000000000 | 0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 | 0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |                2
(1 row)

-- Chainsaw event resolving the state
select count(*)
from cm_channel_updates
where chainsaw_resolution_event_id is not null;
 count 
-------
     0
(1 row)

select chainsaw_insert_event(
    mk_addr('0x1ABC'), mk_addr('0x2ABC'),
    69, mk_hash('0x69ABC'), mk_hash('0x6969ABC'), 4, 1,
    mk_addr('0x3ABC'),
    extract(epoch from now()) * 1000,
    'DidUpdateChannel',
    jsonb_build_object(
        'user', mk_addr('0x3ABC'),
        'txCount', '[1, 1]'::jsonb
    )
);
                     chainsaw_insert_event                     
---------------------------------------------------------------
 {"duplicate": false, "channel_id": 1, "chainsaw_event_id": 5}
(1 row)

select count(*)
from cm_channel_updates
where chainsaw_resolution_event_id is not null;
 count 
-------
     1
(1 row)

select recipient, sig_hub, sig_user, latest_update_id
from cm_channels
where "user" = mk_addr('0x3abc');
                 recipient                  |                                                               sig_hub                                                                |                                                               sig_user                                                               | latest_update_id 
--------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+------------------
 0x3abc000000000000000000000000000000000000 | 0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 | 0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 |                2
(1 row)

--
-- Double check that addresses are case insensitive
--
select contract
from chainsaw_events
where contract like '0x2abc%';
                  contract                  
--------------------------------------------
 0x2ABC000000000000000000000000000000000000
 0x2ABC000000000000000000000000000000000000
 0x2ABC000000000000000000000000000000000000
 0x2ABC000000000000000000000000000000000000
(4 rows)

select block_hash
from chainsaw_events
where block_hash like '0x69abc%';
                             block_hash                             
--------------------------------------------------------------------
 0x69ABC00000000000000000000000000000000000000000000000000000000000
 0x69ABC00000000000000000000000000000000000000000000000000000000000
 0x69ABC00000000000000000000000000000000000000000000000000000000000
 0x69ABC00000000000000000000000000000000000000000000000000000000000
(4 rows)

select tx_hash
from chainsaw_events
where tx_hash like '0x6969abc%';
                              tx_hash                               
--------------------------------------------------------------------
 0x6969ABC000000000000000000000000000000000000000000000000000000000
 0x6969ABC000000000000000000000000000000000000000000000000000000000
 0x6969ABC000000000000000000000000000000000000000000000000000000000
 0x6969ABC000000000000000000000000000000000000000000000000000000000
(4 rows)

select sender
from chainsaw_events
where sender like '0x3abc%';
                   sender                   
--------------------------------------------
 0x3ABC000000000000000000000000000000000000
 0x3ABC000000000000000000000000000000000000
 0x3ABC000000000000000000000000000000000000
 0x3ABC000000000000000000000000000000000000
(4 rows)

--
-- Creating a channel by inserting a state update
--
select show_row(row_to_json(cm_channel_insert_or_update_state(
    mk_addr('0x1FFF'), mk_addr('0x2FFF'), mk_addr('0x3FFF'),
    'Payment', '{}',
    mk_addr('0x3FFF'),
    null, null,
    jsonb_build_object(
        'recipient', mk_addr('0x3FFF'),
        'balanceWeiHub', '6',
        'balanceWeiUser', '9',
        'balanceTokenHub', '69',
        'balanceTokenUser', '96',
        'txCountGlobal', '1',
        'txCountChain', '1',
        'threadRoot', mk_hash('0x0'),
        'threadCount', '0',
        'sigHub', mk_sig('0x123'),
        'sigUser', mk_sig('0x456')
    )
)));
show_row

 {"id": 3, "args": {}, "user": "0x3FFF000000000000000000000000000000000000", "reason": "Payment", "invalid": null, "sig_hub": "0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "timeout": null, "contract": "0x2FFF000000000000000000000000000000000000", "sig_user": "0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "recipient": "0x3fff000000000000000000000000000000000000", "channel_id": 2, "created_on": "<date>", "originator": "0x3FFF000000000000000000000000000000000000", "thread_root": "0x0000000000000000000000000000000000000000000000000000000000000000", "thread_count": 0, "hub_signed_on": "<date>", "tx_count_chain": 1, "user_signed_on": "<date>", "balance_wei_hub": 6, "tx_count_global": 1, "balance_wei_user": 9, "balance_token_hub": 69, "chainsaw_event_id": null, "balance_token_user": 96, "onchain_tx_logical_id": null, "pending_deposit_wei_hub": null, "pending_deposit_wei_user": null, "pending_deposit_token_hub": null, "pending_deposit_token_user": null, "pending_withdrawal_wei_hub": null, "pending_withdrawal_wei_user": null, "chainsaw_resolution_event_id": null, "pending_withdrawal_token_hub": null, "pending_withdrawal_token_user": null}
(1 row)

--
-- This is a new channel, but the txcount isn't 1, so it should fail
--
select show_row(row_to_json(cm_channel_insert_or_update_state(
    mk_addr('0x1FFF'), mk_addr('0x2FCFC'), mk_addr('0x3FFF'),
    'Payment', '{}',
    mk_addr('0x3FFF'),
    null, null,
    jsonb_build_object(
        'recipient', mk_addr('0x3FFF'),
        'balanceWeiHub', '6',
        'balanceWeiUser', '9',
        'balanceTokenHub', '69',
        'balanceTokenUser', '96',
        'txCountGlobal', '69',
        'txCountChain', '1',
        'threadRoot', mk_hash('0x0'),
        'threadCount', '0',
        'sigHub', mk_sig('0x123'),
        'sigUser', mk_sig('0x456')
    )
)));
ERROR:  Refusing to create channel (0x2FCFC00000000000000000000000000000000000, 0x3FFF000000000000000000000000000000000000) in response to state ({"sigHub": "0x1230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "sigUser": "0x4560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "recipient": "0x3FFF000000000000000000000000000000000000", "threadRoot": "0x0000000000000000000000000000000000000000000000000000000000000000", "threadCount": "0", "txCountChain": "1", "balanceWeiHub": "6", "txCountGlobal": "69", "balanceWeiUser": "9", "balanceTokenHub": "69", "balanceTokenUser": "96"}) when txCountGlobal <> 1
CONTEXT:  PL/pgSQL function cm_channel_insert_or_update_state(csw_eth_address,csw_eth_address,csw_eth_address,cm_channel_update_reason,jsonb,csw_eth_address,bigint,bigint,jsonb) line 24 at RAISE
