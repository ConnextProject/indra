name: CD Staging

on:
  push:
    branches:
      - staging

jobs:
  test-node:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: make dev
    - run: make build-report
    - run: make test-node

  test-cf:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: make dev
    - run: make build-report
    - run: make test-cf

  test-bot:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: make prod
    - run: make build-report
    - run: make start-test
    - run: make test-bot

  test-bot-farm:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: make prod
    - run: make build-report
    - run: make start-test
    - run: make test-bot-farm

  test-daicard:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: make prod
    - run: make build-report
    - run: make start-test
    - run: make test-daicard

  test-ssh:
    env:
      KEY: $HOME/.ssh/id_rsa
      SSH_DIR: $HOME/.ssh
      SSH_KEY: ${{ secrets.SSH_KEY }}
      STAGING_DOMAINNAME: staging.indra.connext.network
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: setup ssh stuff
      run: |
        mkdir -p $SSH_DIR
        rm -f $KEY $SSH_DIR/known_hosts
        touch $KEY $SSH_DIR/known_hosts
        echo '-----BEGIN RSA PRIVATE KEY-----' >> $KEY
        echo $SSH_KEY >> $KEY
        echo '-----END RSA PRIVATE KEY-----' >> $KEY
        chmod 400 $KEY
        ssh-keygen -lf $KEY
        ssh-keyscan -t rsa $STAGING_DOMAINNAME >> $SSH_DIR/known_hosts
        ssh -i $KEY -o StrictHostKeyChecking=no ubuntu@$STAGING_DOMAINNAME hostname
    - name: ssh test
      run: |
        ssh -i $KEY ubuntu@$STAGING_DOMAINNAME "bash -s" <<EOF
          set -e
          echo "we're in"
          hostname
          exit
        EOF

  push:
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    needs: [test-node, test-cf, test-bot, test-bot-farm, test-daicard]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - run: make prod
    - run: make build-report
    - run: make push-latest

  deploy:
    env:
      INDRA_ADMIN_TOKEN: ${{ secrets.INDRA_ADMIN_TOKEN }}
      KEY: $HOME/.ssh/id_rsa
      RINKEBY_ETH_PROVIDER: ${{ secrets.RINKEBY_ETH_PROVIDER }}
      SSH_DIR: $HOME/.ssh
      SSH_KEY: ${{ secrets.SSH_KEY }}
      STAGING_DOMAINNAME: staging.indra.connext.network
    needs: [push]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: setup ssh stuff
      run: |
        mkdir -p $SSH_DIR
        rm -f $KEY $SSH_DIR/known_hosts
        touch $KEY $SSH_DIR/known_hosts
        echo '-----BEGIN RSA PRIVATE KEY-----' >> $KEY
        echo $SSH_KEY >> $KEY
        echo '-----END RSA PRIVATE KEY-----' >> $KEY
        chmod 400 $KEY
        ssh-keygen -lf $KEY
        ssh-keyscan -t rsa $STAGING_DOMAINNAME >> $SSH_DIR/known_hosts
        ssh -i $KEY -o StrictHostKeyChecking=no ubuntu@$STAGING_DOMAINNAME hostname
    - name: deploy to staging
      run: |
        ssh -i $KEY ubuntu@$STAGING_DOMAINNAME "bash -s" <<EOF
          set -e
          git clone https://github.com/ConnextProject/indra.git || true
          cd indra
          git checkout --force staging
          git fetch
          git reset --hard $GITHUB_SHA
          export INDRA_MODE="staging"
          export INDRA_ETH_PROVIDER=$RINKEBY_ETH_PROVIDER
          export INDRA_DOMAINNAME="$STAGING_DOMAINNAME"
          export INDRA_ADMIN_TOKEN="$INDRA_ADMIN_TOKEN"
          make restart-prod
          docker container prune -f
          docker image ls -q | xargs docker image rm || true
          exit
        EOF
